# test config file for compiler
ARCH=Mem

#
CORES=4

#GClocks/s
SPEED=2.8

#GB/s
MEM_THROUGPUT=120.0

#clocks to start transaction
NET_LATENCY=100000

#GB/s
#NET_THROUGPUT=3.0

# default reg size in bits
REG_SIZE=64

#average <API> time in clocks

#minimum work (in clycles) where running in parallel is faster than running sequentially (granularity of tasks)
THREAD_OVERHEAD=3000
MPI_OVERHEAD=100000

ALLOC_OVERHEAD=50

#average <instruction> time in clocks
#here average means that we take the average of the possible different instructions 
#operand timings (reg/reg;reg/mem;...) assuming a fair mixture of these
#obviously we cannot take into account caches, temp registers, inst decoding etc.

LOCKEDXCHG=11.0
LOCKEDADD=11.0
LOCKEDSWAP=11.0
LOCKEDCMPXCHG=11.0

MOV=1.54
PUSH=1.0
POP=1.0
ADD=1.55
SUB=1.55
CMP=0.83
NEG=2.08
NOT=2.08
MUL=2.15
DIV=15.0
AND=1.55
OR=1.55

JMP=2.0
CJMP=2.0
CALL=2.0
RET=2.0

FLD=2.0
FST=2.83
FADD=1.25
FMUL=1.75
FDIV=17.0
FABS=1.0

FSCALE=12.0
FSQRT=27.0
FSIN=70.0
FCOS=70.0
FPTAN=115.0
FPATAN=12.0

#SSE
SSE_REG_SIZE=128
SSE_BANK_SIZE=4

#we assume only alligned access

SSE_MOVA=1.0
SSE_ADDA=2.0
SSE_SUBA=2.0
SSE_MULA=3.0
SSE_DIVA=15.0
SSE_SQRTA=13.0
SSE_ANDA=1.0
SSE_ORA=1.0



