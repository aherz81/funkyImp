# test config file for compiler
ARCH=Zero

#
CORES=1

#GClocks/s
SPEED=0.00008

#GB/s
MEM_THROUGPUT=10.00000

#clocks to start transaction
NET_LATENCY=100000

#GB/s
#NET_THROUGPUT=3.0

# default reg size in bits
REG_SIZE=64

#average <API> time in clocks

#minimum work (in clycles) where running in parallel is faster than running sequentially (granularity of tasks)
THREAD_OVERHEAD=1e32
MPI_OVERHEAD=1e32

ALLOC_OVERHEAD=50

#average <instruction> time in clocks
#here average means that we take the average of the possible different instructions 
#operand timings (reg/reg;reg/mem;...) assuming a fair mixture of these
#obviously we cannot take into account caches, temp registers, inst decoding etc.

LOCKEDXCHG=10.00000
LOCKEDADD=10.00000
LOCKEDSWAP=10.00000
LOCKEDCMPXCHG=10.00000

MOV=0.000054
PUSH=0.00000
POP=0.00000
ADD=0.000055
SUB=0.000055
CMP=0.83
NEG=0.000008
NOT=0.000008
MUL=0.000015
DIV=15.0
AND=0.000055
OR=0.000055

JMP=0.00000
CJMP=0.00000
CALL=0.00000
RET=0.00000

FLD=0.00000
FST=0.000083
FADD=0.000025
FMUL=0.000075
FDIV=17.0
FABS=0.00000

FSCALE=10.00000
FSQRT=27.0
FSIN=70.0
FCOS=70.0
FPTAN=115.0
FPATAN=10.00000

#SSE
SSE_REG_SIZE=64
SSE_BANK_SIZE=4

#we assume only alligned access

SSE_MOVA=0.00000
SSE_ADDA=0.00000
SSE_SUBA=0.00000
SSE_MULA=3.0
SSE_DIVA=15.0
SSE_SQRTA=13.0
SSE_ANDA=0.00000
SSE_ORA=0.00000



