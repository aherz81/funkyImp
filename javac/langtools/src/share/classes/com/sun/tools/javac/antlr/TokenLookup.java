package com.sun.tools.javac.antlr;
import java.util.HashMap;
public class TokenLookup
{
private static final HashMap<Integer, String> lookup = new HashMap<Integer, String>();
static {
lookup.put(140,">=");
lookup.put(93,"==");
lookup.put(53,"implements");
lookup.put(141,"event");
lookup.put(72,"this");
lookup.put(86,";");
lookup.put(78,"volatile");
lookup.put(63,"protected");
lookup.put(50,"for");
lookup.put(104,"^");
lookup.put(67,"static");
lookup.put(34,"catch");
lookup.put(46,"extends");
lookup.put(136,"singular");
lookup.put(82,"{");
lookup.put(61,"package");
lookup.put(76,"try");
lookup.put(110,"&=");
lookup.put(80,"(");
lookup.put(6,":");
lookup.put(64,"public");
lookup.put(41,"default");
lookup.put(85,"]");
lookup.put(45,"enum");
lookup.put(29,"assert");
lookup.put(48,"finally");
lookup.put(60,"new");
lookup.put(111,"|=");
lookup.put(122,"export");
lookup.put(7,"=");
lookup.put(129,"nonblocking");
lookup.put(105,"%");
lookup.put(69,"super");
lookup.put(33,"case");
lookup.put(153,".\\\\");
lookup.put(30,"boolean");
lookup.put(144,"#WORK");
lookup.put(37,"thread");
lookup.put(65,"resume");
lookup.put(139,"<=");
lookup.put(115,"!=");
lookup.put(146,"#for");
lookup.put(97,"--");
lookup.put(117,"<");
lookup.put(84,"[");
lookup.put(102,"&");
lookup.put(55,"instanceof");
lookup.put(134,"out");
lookup.put(91,"~");
lookup.put(101,"/");
lookup.put(150,"where");
lookup.put(109,"/=");
lookup.put(113,"%=");
lookup.put(116,">");
lookup.put(95,"||");
lookup.put(94,"&&");
lookup.put(98,"+");
lookup.put(88,".");
lookup.put(32,"byte");
lookup.put(54,"import");
lookup.put(96,"++");
lookup.put(44,"else");
lookup.put(47,"final");
lookup.put(112,"^=");
lookup.put(59,"native");
lookup.put(106,"+=");
lookup.put(148,"finally_deprecated");
lookup.put(128,"unique");
lookup.put(89,"...");
lookup.put(131,"blocking");
lookup.put(77,"void");
lookup.put(137,"domain");
lookup.put(92,"?");
lookup.put(62,"private");
lookup.put(56,"int");
lookup.put(52,"if");
lookup.put(123,"atomic");
lookup.put(99,"-");
lookup.put(87,",");
lookup.put(152,"select");
lookup.put(133,"in");
lookup.put(125,"work");
lookup.put(107,"-=");
lookup.put(66,"short");
lookup.put(154,"sizeof");
lookup.put(58,"long");
lookup.put(90,"!");
lookup.put(103,"|");
lookup.put(38,"class");
lookup.put(147,"cancel");
lookup.put(36,"group");
lookup.put(114,"@");
lookup.put(135,"unsigned");
lookup.put(130,"inline");
lookup.put(149,"::");
lookup.put(138,"_");
lookup.put(126,"tasks");
lookup.put(81,")");
lookup.put(142,"#PARALLEL");
lookup.put(108,"*=");
lookup.put(35,"char");
lookup.put(155,"\\D");
lookup.put(49,"float");
lookup.put(83,"}");
lookup.put(28,"abstract");
lookup.put(132,"inout");
lookup.put(143,"#FORCE");
lookup.put(145,"#TIME");
lookup.put(43,"double");
lookup.put(151,"ยง");
lookup.put(127,"mem");
lookup.put(124,"packed");
lookup.put(100,"*");
lookup.put(57,"interface");
}
public static String get(Integer id){return lookup.get(id);}
}
