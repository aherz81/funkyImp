LANGTOOLS_PATH = ../../../..
FUNKY_PATH = ../../../../../..
FUNKY = $(LANGTOOLS_PATH)/build/bootstrap/bin/imp
CPP = g++  #should be icpc so we can use the alingment hints (for arrays)
export LD_LIBRARY_PATH:=$(FUNKY_LIB_PATH)/lib
export LIBRARY_PATH:=$(FUNKY_LIB_PATH)/lib

compile:
	 mkdir -p tmp
	 $(FUNKY) -PP "" -FORCEGCCLEANUP -g:none -regression -verbose -CPP -DEPGRAPH -cp ../../../../../../input/current/ -d ./tmp ./$(BUILD_FILE) -CC $(CPP) -std=c++0x -I./tmp -I$(FUNKY_PATH)/backend/boehm/bdwgc/include -I$(FUNKY_PATH)/backend/RunTime/include -I$(FUNKY_PATH)/backend/tbb4/include -o./tmp/$(OUT_FILE) -g -w {files} -ltbb -lFUNKY -lgc -ltbbmalloc -lpthread

release:
	 mkdir -p tmp
	 $(FUNKY) -PP "" -g:none -CONFIG "../../../../../../config/many.properties" -CPP -cp ../../../../../../input/current/ -d ./tmp ./$(BUILD_FILE) -CC $(CPP) -std=c++0x -g -w -O3 -msse4.1 -I$(FUNKY_PATH)/backend/boehm/bdwgc/include -I./tmp -I$(FUNKY_PATH)/backend/RunTime/include -I$(FUNKY_PATH)/backend/tbb4/include -o./tmp/$(OUT_FILE) {files} -ltbb -lFUNKY -lgc -ltbbmalloc -lpthread

clean:
	 rm -rf tmp
	 mkdir -p tmp

