context: '{  :  }'
arrays:
- context: '{  :  }'
  extent: '{ N[] }'
  value_bounds: '{ [i0] : i0 >= 0 and i0 <= 100 }'
  element_type: int
- context: '{  :  }'
  extent: '{ M[] }'
  value_bounds: '{ [i0] : i0 >= 0 and i0 <= 100 }'
  element_type: int
- context: '{  :  }'
  extent: '{ a[i0, i1] : i0 >= 0 and i1 >= 0 and i0 <= 99 and i1 <= 99 }'
  element_type: int
statements:
- line: 13
  domain: '{ S_0[] }'
  schedule: '{ S_0[] -> [0] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '{ S_0[] -> N[] }'
      read: 0
      write: 1
    - type: call
      name: f
- line: 14
  domain: '{ S_1[] }'
  schedule: '{ S_1[] -> [1] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '{ S_1[] -> M[] }'
      read: 0
      write: 1
    - type: call
      name: g
- line: 17
  domain: '{ [S_2[i, j] -> [M, N]] : i >= 0 and N >= 1 + i and j >= 0 and M >= 1 +
    j }'
  schedule: '{ S_2[i, j] -> [2, i, j] }'
  body:
    type: binary
    operation: =
    arguments:
    - type: access
      relation: '{ S_2[i, j] -> a[i, j] }'
      read: 0
      write: 1
    - type: binary
      operation: +
      arguments:
      - type: access
        relation: '{ S_2[i, j] -> [i] }'
        read: 1
        write: 0
      - type: access
        relation: '{ S_2[i, j] -> [j] }'
        read: 1
        write: 0
  arguments:
  - type: access
    relation: '{ S_2[i, j] -> M[] : j >= 0 }'
    read: 1
    write: 0
  - type: access
    relation: '{ S_2[i, j] -> N[] : i >= 0 and j >= 0 }'
    read: 1
    write: 0
- line: 20
  domain: '{ [S_3[i, j] -> [M, N]] : i >= 0 and N >= 1 + i and j >= 0 and M >= 1 +
    j }'
  schedule: '{ S_3[i, j] -> [3, i, j] }'
  body:
    type: call
    name: h
    arguments:
    - type: access
      relation: '{ S_3[i, j] -> [i] }'
      read: 1
      write: 0
    - type: access
      relation: '{ S_3[i, j] -> [j] }'
      read: 1
      write: 0
    - type: access
      relation: '{ S_3[i, j] -> a[i, j] }'
      read: 1
      write: 0
  arguments:
  - type: access
    relation: '{ S_3[i, j] -> M[] : j >= 0 }'
    read: 1
    write: 0
  - type: access
    relation: '{ S_3[i, j] -> N[] : i >= 0 and j >= 0 }'
    read: 1
    write: 0
