<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="89">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="barvinok-0.35">
      <df name="barvinok">
        <in>NTL.h</in>
        <in>NTL_QQ.h</in>
        <in>barvinok.h</in>
        <in>basis_reduction.h</in>
        <in>evalue.h</in>
        <in>genfun.h</in>
        <in>isl.h</in>
        <in>options.h</in>
        <in>polylib.h</in>
        <in>sample.h</in>
        <in>set.h</in>
        <in>util.h</in>
      </df>
      <df name="cloog">
        <df name="autoconf">
        </df>
        <df name="doc">
          <df name="images">
          </df>
        </df>
        <df name="examples">
          <df name="example">
            <in>example.c</in>
          </df>
        </df>
        <df name="include">
          <df name="cloog">
            <df name="isl">
              <in>backend.h</in>
              <in>cloog.h</in>
              <in>constraintset.h</in>
              <in>domain.h</in>
            </df>
            <df name="matrix">
              <in>constraintset.h</in>
            </df>
            <in>block.h</in>
            <in>clast.h</in>
            <in>cloog.h</in>
            <in>constraints.h</in>
            <in>domain.h</in>
            <in>input.h</in>
            <in>int.h</in>
            <in>loop.h</in>
            <in>matrix.h</in>
            <in>names.h</in>
            <in>options.h</in>
            <in>pprint.h</in>
            <in>program.h</in>
            <in>state.h</in>
            <in>statement.h</in>
            <in>stride.h</in>
            <in>union_domain.h</in>
            <in>version.h</in>
          </df>
        </df>
        <df name="m4">
        </df>
        <df name="source">
          <df name="isl">
            <in>backend.c</in>
            <in>constraints.c</in>
            <in>domain.c</in>
          </df>
          <df name="matrix">
            <in>constraintset.c</in>
          </df>
          <in>block.c</in>
          <in>clast.c</in>
          <in>cloog.c</in>
          <in>input.c</in>
          <in>int.c</in>
          <in>loop.c</in>
          <in>matrix.c</in>
          <in>mp_get_memory_functions.c</in>
          <in>names.c</in>
          <in>options.c</in>
          <in>pprint.c</in>
          <in>program.c</in>
          <in>state.c</in>
          <in>statement.c</in>
          <in>stride.c</in>
          <in>union_domain.c</in>
          <in>version.c</in>
        </df>
        <df name="test">
          <df name="isl">
            <in>jacobi-shared.c</in>
            <in>jacobi-shared.good.c</in>
            <in>mod.c</in>
            <in>mod2.c</in>
            <in>mod3.c</in>
            <in>mod4.c</in>
            <in>mxm-shared.c</in>
            <in>unroll.c</in>
            <in>unroll.good.c</in>
            <in>unroll2.c</in>
            <in>unroll2.good.c</in>
          </df>
          <df name="non_optimal">
            <in>nul_complex1.c</in>
            <in>nul_complex1.good.c</in>
            <in>usvd_e_t.c</in>
            <in>usvd_e_t.good.c</in>
            <in>youcef.c</in>
            <in>youcef.good.c</in>
          </df>
          <df name="reservoir">
            <in>QR.c</in>
            <in>QR.good.c</in>
            <in>bastoul3.c</in>
            <in>cholesky2.c</in>
            <in>cholesky2.good.c</in>
            <in>fusion1.c</in>
            <in>fusion1.good.c</in>
            <in>fusion2.c</in>
            <in>fusion2.good.c</in>
            <in>jacobi2.c</in>
            <in>jacobi2.good.c</in>
            <in>jacobi3.c</in>
            <in>jacobi3.good.c</in>
            <in>lim-lam1.c</in>
            <in>lim-lam1.good.c</in>
            <in>lim-lam2.c</in>
            <in>lim-lam2.good.c</in>
            <in>lim-lam3.c</in>
            <in>lim-lam3.good.c</in>
            <in>lim-lam4.c</in>
            <in>lim-lam4.good.c</in>
            <in>lim-lam5.c</in>
            <in>lim-lam5.good.c</in>
            <in>lim-lam6.c</in>
            <in>lim-lam6.good.c</in>
            <in>liu-zhuge1.c</in>
            <in>liu-zhuge1.good.c</in>
            <in>loechner3.c</in>
            <in>loechner3.good.c</in>
            <in>loechner4.c</in>
            <in>loechner4.good.c</in>
            <in>loechner5.c</in>
            <in>loechner5.good.c</in>
            <in>mg-interp.c</in>
            <in>mg-interp.good.c</in>
            <in>mg-interp2.c</in>
            <in>mg-interp2.good.c</in>
            <in>mg-psinv.c</in>
            <in>mg-psinv.good.c</in>
            <in>mg-resid.c</in>
            <in>mg-resid.good.c</in>
            <in>mg-rprj3.c</in>
            <in>mg-rprj3.good.c</in>
            <in>pingali1.c</in>
            <in>pingali1.good.c</in>
            <in>pingali2.c</in>
            <in>pingali2.good.c</in>
            <in>pingali3.c</in>
            <in>pingali3.good.c</in>
            <in>pingali4.c</in>
            <in>pingali4.good.c</in>
            <in>pingali5.c</in>
            <in>pingali5.good.c</in>
            <in>pingali6.c</in>
            <in>pingali6.good.c</in>
            <in>stride.c</in>
            <in>stride2.c</in>
            <in>tang-xue1.c</in>
            <in>tang-xue1.good.c</in>
            <in>two.c</in>
            <in>two.good.c</in>
          </df>
          <in>0D-1.c</in>
          <in>0D-1.good.c</in>
          <in>0D-2.c</in>
          <in>0D-2.good.c</in>
          <in>0D-3.c</in>
          <in>0D-3.good.c</in>
          <in>1point-1.c</in>
          <in>1point-1.good.c</in>
          <in>1point-2.c</in>
          <in>1point-2.good.c</in>
          <in>4-param.c</in>
          <in>4-param.good.c</in>
          <in>backtrack.c</in>
          <in>backtrack.good.c</in>
          <in>basic-bounds-1.c</in>
          <in>basic-bounds-1.good.c</in>
          <in>basic-bounds-2.c</in>
          <in>basic-bounds-2.good.c</in>
          <in>basic-bounds-3.c</in>
          <in>basic-bounds-3.good.c</in>
          <in>basic-bounds-4.c</in>
          <in>basic-bounds-4.good.c</in>
          <in>basic-bounds-5.c</in>
          <in>basic-bounds-5.good.c</in>
          <in>basic-bounds-6.c</in>
          <in>basic-bounds-6.good.c</in>
          <in>block.c</in>
          <in>block.good.c</in>
          <in>block2.c</in>
          <in>block2.good.c</in>
          <in>block3.c</in>
          <in>block3.good.c</in>
          <in>byu98-1-2-3.c</in>
          <in>byu98-1-2-3.good.c</in>
          <in>cholesky.c</in>
          <in>cholesky.good.c</in>
          <in>cholesky2.c</in>
          <in>cholesky2.good.c</in>
          <in>christian.c</in>
          <in>christian.good.c</in>
          <in>classen.c</in>
          <in>classen.good.c</in>
          <in>classen2.c</in>
          <in>classen2.good.c</in>
          <in>constant.c</in>
          <in>constant.good.c</in>
          <in>constbound.c</in>
          <in>constbound.good.c</in>
          <in>darte.c</in>
          <in>darte.good.c</in>
          <in>dartef.f</in>
          <in>dealII.c</in>
          <in>dealII.good.c</in>
          <in>donotsimp.c</in>
          <in>donotsimp.good.c</in>
          <in>dot.c</in>
          <in>dot.good.c</in>
          <in>dot2.c</in>
          <in>dot2.good.c</in>
          <in>double.c</in>
          <in>double.good.c</in>
          <in>durbin_e_s.c</in>
          <in>durbin_e_s.good.c</in>
          <in>emploi.c</in>
          <in>emploi.good.c</in>
          <in>equality.c</in>
          <in>equality.good.c</in>
          <in>equality2.c</in>
          <in>equality2.good.c</in>
          <in>esced.c</in>
          <in>esced.good.c</in>
          <in>ex1.c</in>
          <in>ex1.good.c</in>
          <in>forwardsub-1-1-2.c</in>
          <in>forwardsub-1-1-2.good.c</in>
          <in>forwardsub-2-1-2-3.c</in>
          <in>forwardsub-2-1-2-3.good.c</in>
          <in>forwardsub-3-1-2.c</in>
          <in>forwardsub-3-1-2.good.c</in>
          <in>gauss.c</in>
          <in>gauss.good.c</in>
          <in>generate_test.c</in>
          <in>gesced.c</in>
          <in>gesced.good.c</in>
          <in>gesced2.c</in>
          <in>gesced2.good.c</in>
          <in>gesced3.c</in>
          <in>gesced3.good.c</in>
          <in>guide.c</in>
          <in>guide.good.c</in>
          <in>iftest.c</in>
          <in>iftest.good.c</in>
          <in>iftest2.c</in>
          <in>iftest2.good.c</in>
          <in>iftestf.f</in>
          <in>infinite.c</in>
          <in>infinite2.c</in>
          <in>infinite3.c</in>
          <in>infinite4.c</in>
          <in>largeur.c</in>
          <in>largeur.good.c</in>
          <in>levenshtein-1-2-3.c</in>
          <in>levenshtein-1-2-3.good.c</in>
          <in>levenshtein-1-2-3f.f</in>
          <in>lex.c</in>
          <in>lex.good.c</in>
          <in>lineality-1-2.c</in>
          <in>lineality-1-2.good.c</in>
          <in>lineality-2-1-2.c</in>
          <in>lineality-2-1-2.good.c</in>
          <in>logo.c</in>
          <in>logo.good.c</in>
          <in>logopar.c</in>
          <in>logopar.good.c</in>
          <in>lu.c</in>
          <in>lu.good.c</in>
          <in>lu2.c</in>
          <in>lu2.good.c</in>
          <in>lub.c</in>
          <in>lub.good.c</in>
          <in>lux.c</in>
          <in>lux.good.c</in>
          <in>merge.c</in>
          <in>merge.good.c</in>
          <in>min-1-1.c</in>
          <in>min-1-1.good.c</in>
          <in>min-2-1.c</in>
          <in>min-2-1.good.c</in>
          <in>min-3-1.c</in>
          <in>min-3-1.good.c</in>
          <in>min-4-1.c</in>
          <in>min-4-1.good.c</in>
          <in>mod4.c</in>
          <in>mode.c</in>
          <in>mode.good.c</in>
          <in>multi-mm-1.c</in>
          <in>multi-mm-1.good.c</in>
          <in>multi-stride.c</in>
          <in>multi-stride2.c</in>
          <in>no_lindep.c</in>
          <in>no_lindep.good.c</in>
          <in>nul_basic1.c</in>
          <in>nul_basic2.c</in>
          <in>nul_lcpc.c</in>
          <in>orc.c</in>
          <in>orc.good.c</in>
          <in>otl.c</in>
          <in>otl.good.c</in>
          <in>param-split.c</in>
          <in>param-split.good.c</in>
          <in>pouchet.c</in>
          <in>pouchet.good.c</in>
          <in>rectangle.c</in>
          <in>rectangle.good.c</in>
          <in>singleton.c</in>
          <in>singleton.good.c</in>
          <in>sor1d.c</in>
          <in>sor1d.good.c</in>
          <in>square+triangle-1-1-2-3.c</in>
          <in>square+triangle-1-1-2-3.good.c</in>
          <in>stride.c</in>
          <in>stride.good.c</in>
          <in>stride2.c</in>
          <in>stride2.good.c</in>
          <in>stride3.c</in>
          <in>stride4.c</in>
          <in>swim.c</in>
          <in>swim.good.c</in>
          <in>test.c</in>
          <in>test.good.c</in>
          <in>thomasset.c</in>
          <in>thomasset.good.c</in>
          <in>tiling.c</in>
          <in>tiling.good.c</in>
          <in>uday_scalars.c</in>
          <in>uday_scalars.good.c</in>
          <in>union.c</in>
          <in>union.good.c</in>
          <in>vasilache.c</in>
          <in>vasilache.good.c</in>
          <in>vivien.c</in>
          <in>vivien.good.c</in>
          <in>vivien2.c</in>
          <in>vivien2.good.c</in>
          <in>walters.c</in>
          <in>walters.good.c</in>
          <in>walters2.c</in>
          <in>walters2.good.c</in>
          <in>walters3.c</in>
          <in>walters3.good.c</in>
          <in>wavefront.c</in>
          <in>wavefront.good.c</in>
          <in>yosr.c</in>
          <in>yosr.good.c</in>
          <in>yosr2.c</in>
          <in>yosr2.good.c</in>
          <in>yosrf.f</in>
        </df>
        <in>version.h</in>
      </df>
      <df name="doc">
      </df>
      <df name="interface">
        <in>all.h</in>
      </df>
      <df name="isl">
        <df name="doc">
        </df>
        <df name="include">
          <df name="isl">
            <in>aff.h</in>
            <in>aff_type.h</in>
            <in>arg.h</in>
            <in>band.h</in>
            <in>blk.h</in>
            <in>config.h</in>
            <in>constraint.h</in>
            <in>ctx.h</in>
            <in>dim.h</in>
            <in>flow.h</in>
            <in>hash.h</in>
            <in>id.h</in>
            <in>ilp.h</in>
            <in>int.h</in>
            <in>list.h</in>
            <in>local_space.h</in>
            <in>lp.h</in>
            <in>map.h</in>
            <in>map_type.h</in>
            <in>mat.h</in>
            <in>multi.h</in>
            <in>obj.h</in>
            <in>options.h</in>
            <in>point.h</in>
            <in>polynomial.h</in>
            <in>polynomial_type.h</in>
            <in>printer.h</in>
            <in>schedule.h</in>
            <in>seq.h</in>
            <in>set.h</in>
            <in>set_type.h</in>
            <in>space.h</in>
            <in>stdint.h</in>
            <in>stream.h</in>
            <in>union_map.h</in>
            <in>union_set.h</in>
            <in>vec.h</in>
            <in>version.h</in>
            <in>vertices.h</in>
          </df>
        </df>
        <df name="interface">
          <in>extract_interface.cc</in>
          <in>extract_interface.h</in>
          <in>python.cc</in>
          <in>python.h</in>
        </df>
        <df name="m4">
        </df>
        <df name="test_inputs">
        </df>
        <in>basis_reduction_tab.c</in>
        <in>basis_reduction_templ.c</in>
        <in>bound.c</in>
        <in>cat.c</in>
        <in>closure.c</in>
        <in>gitversion.h</in>
        <in>isl_aff.c</in>
        <in>isl_aff_private.h</in>
        <in>isl_affine_hull.c</in>
        <in>isl_arg.c</in>
        <in>isl_band.c</in>
        <in>isl_band_private.h</in>
        <in>isl_basis_reduction.h</in>
        <in>isl_bernstein.c</in>
        <in>isl_bernstein.h</in>
        <in>isl_blk.c</in>
        <in>isl_bound.c</in>
        <in>isl_bound.h</in>
        <in>isl_coalesce.c</in>
        <in>isl_config.h</in>
        <in>isl_config_post.h</in>
        <in>isl_constraint.c</in>
        <in>isl_constraint_private.h</in>
        <in>isl_convex_hull.c</in>
        <in>isl_ctx.c</in>
        <in>isl_ctx_private.h</in>
        <in>isl_dim.c</in>
        <in>isl_dim_map.c</in>
        <in>isl_dim_map.h</in>
        <in>isl_equalities.c</in>
        <in>isl_equalities.h</in>
        <in>isl_factorization.c</in>
        <in>isl_factorization.h</in>
        <in>isl_farkas.c</in>
        <in>isl_flow.c</in>
        <in>isl_fold.c</in>
        <in>isl_gmp.c</in>
        <in>isl_hash.c</in>
        <in>isl_hmap_map_basic_set.c</in>
        <in>isl_hmap_map_basic_set.h</in>
        <in>isl_id.c</in>
        <in>isl_id_private.h</in>
        <in>isl_ilp.c</in>
        <in>isl_input.c</in>
        <in>isl_list.c</in>
        <in>isl_list_private.h</in>
        <in>isl_list_templ.c</in>
        <in>isl_list_templ.h</in>
        <in>isl_local_space.c</in>
        <in>isl_local_space_private.h</in>
        <in>isl_lp.c</in>
        <in>isl_lp_no_piplib.c</in>
        <in>isl_lp_piplib.c</in>
        <in>isl_lp_piplib.h</in>
        <in>isl_map.c</in>
        <in>isl_map_no_piplib.c</in>
        <in>isl_map_piplib.c</in>
        <in>isl_map_piplib.h</in>
        <in>isl_map_private.h</in>
        <in>isl_map_simplify.c</in>
        <in>isl_map_subtract.c</in>
        <in>isl_mat.c</in>
        <in>isl_mat_private.h</in>
        <in>isl_morph.c</in>
        <in>isl_morph.h</in>
        <in>isl_multi_templ.c</in>
        <in>isl_multi_templ.h</in>
        <in>isl_obj.c</in>
        <in>isl_options.c</in>
        <in>isl_options_private.h</in>
        <in>isl_output.c</in>
        <in>isl_piplib.c</in>
        <in>isl_piplib.h</in>
        <in>isl_point.c</in>
        <in>isl_point_private.h</in>
        <in>isl_polynomial.c</in>
        <in>isl_polynomial_private.h</in>
        <in>isl_printer.c</in>
        <in>isl_printer_private.h</in>
        <in>isl_pw_templ.c</in>
        <in>isl_qsort.c</in>
        <in>isl_qsort.h</in>
        <in>isl_range.c</in>
        <in>isl_range.h</in>
        <in>isl_reordering.c</in>
        <in>isl_reordering.h</in>
        <in>isl_sample.c</in>
        <in>isl_sample.h</in>
        <in>isl_sample_no_piplib.c</in>
        <in>isl_sample_piplib.c</in>
        <in>isl_sample_piplib.h</in>
        <in>isl_scan.c</in>
        <in>isl_scan.h</in>
        <in>isl_schedule.c</in>
        <in>isl_schedule_private.h</in>
        <in>isl_seq.c</in>
        <in>isl_space.c</in>
        <in>isl_space_private.h</in>
        <in>isl_stream.c</in>
        <in>isl_stream_private.h</in>
        <in>isl_tab.c</in>
        <in>isl_tab.h</in>
        <in>isl_tab_pip.c</in>
        <in>isl_test.c</in>
        <in>isl_transitive_closure.c</in>
        <in>isl_union_map.c</in>
        <in>isl_union_map_private.h</in>
        <in>isl_union_templ.c</in>
        <in>isl_vec.c</in>
        <in>isl_version.c</in>
        <in>isl_vertices.c</in>
        <in>isl_vertices_private.h</in>
        <in>mp_get_memory_functions.c</in>
        <in>pip.c</in>
        <in>polyhedron_detect_equalities.c</in>
        <in>polyhedron_minimize.c</in>
        <in>polyhedron_sample.c</in>
        <in>polytope_scan.c</in>
        <in>print.c</in>
        <in>print_templ.c</in>
      </df>
      <df name="isl-polylib">
        <df name="include">
          <in>isl_map_polylib.h</in>
          <in>isl_polylib.h</in>
          <in>isl_set_polylib.h</in>
        </df>
        <df name="m4">
        </df>
        <in>isl_map_polylib.c</in>
      </df>
      <df name="m4">
      </df>
      <df name="omega_interface">
        <in>Exit.cc</in>
        <in>convert.cc</in>
        <in>convert.h</in>
        <in>count.cc</in>
        <in>count.h</in>
      </df>
      <df name="parker">
        <in>construction.c</in>
        <in>count_paths.c</in>
        <in>count_solutions.cc</in>
        <in>count_solutions.h</in>
      </df>
      <df name="pet">
        <df name="build-aux">
        </df>
        <df name="include">
          <in>pet.h</in>
        </df>
        <df name="m4">
        </df>
        <df name="tests">
          <in>QR.c</in>
          <in>arg.c</in>
          <in>ceild.c</in>
          <in>conditional_assignment.c</in>
          <in>conditional_assignment2.c</in>
          <in>data_dependent.c</in>
          <in>data_dependent2.c</in>
          <in>dec.c</in>
          <in>dec2.c</in>
          <in>dec3.c</in>
          <in>dec4.c</in>
          <in>dynamic_bound.c</in>
          <in>empty_domain.c</in>
          <in>floord.c</in>
          <in>floord2.c</in>
          <in>forward_substitution1.c</in>
          <in>forward_substitution2.c</in>
          <in>generic_condition.c</in>
          <in>generic_condition2.c</in>
          <in>implicit_condition.c</in>
          <in>inc.c</in>
          <in>inc2.c</in>
          <in>inc3.c</in>
          <in>inf.c</in>
          <in>inf2.c</in>
          <in>iterator_declaration.c</in>
          <in>label.c</in>
          <in>loop.c</in>
          <in>loop2.c</in>
          <in>loop3.c</in>
          <in>loop4.c</in>
          <in>loop_body.c</in>
          <in>matmul.c</in>
          <in>max.c</in>
          <in>min.c</in>
          <in>min2.c</in>
          <in>mod.c</in>
          <in>piecewise.c</in>
          <in>piecewise2.c</in>
          <in>propagate.c</in>
          <in>quasi_affine.c</in>
          <in>scalar.c</in>
          <in>tobi1.c</in>
          <in>tobi2.c</in>
          <in>unsigned1.c</in>
          <in>unsigned2.c</in>
          <in>wdp.c</in>
        </df>
        <in>emit.c</in>
        <in>main.c</in>
        <in>options.c</in>
        <in>options.h</in>
        <in>parse.c</in>
        <in>pet.cc</in>
        <in>pet_scop_cmp.c</in>
        <in>scan.cc</in>
        <in>scan.h</in>
        <in>scop.c</in>
        <in>scop.h</in>
        <in>scop_plus.cc</in>
        <in>scop_plus.h</in>
        <in>scop_yaml.h</in>
      </df>
      <df name="polylib">
        <df name="applications">
          <in>Zpolytest.c</in>
          <in>c2p.c</in>
          <in>disjoint_union_adj.c</in>
          <in>disjoint_union_sep.c</in>
          <in>ehrhart_lower_bound.c</in>
          <in>ehrhart_quick_apx.c</in>
          <in>ehrhart_ranking.c</in>
          <in>ehrhart_union.c</in>
          <in>ehrhart_upper_bound.c</in>
          <in>example.c</in>
          <in>findv.c</in>
          <in>polytest.c</in>
          <in>pp.c</in>
          <in>r2p.c</in>
          <in>testCompressParms.c</in>
          <in>testehrhart.c</in>
          <in>testlib.c</in>
          <in>verif_ehrhart.c</in>
        </df>
        <df name="autom4te.cache">
        </df>
        <df name="doc">
          <df name="codeDoc">
            <df name="html">
            </df>
          </df>
        </df>
        <df name="include">
          <df name="polylib">
            <in>Lattice.h</in>
            <in>Matop.h</in>
            <in>NormalForms.h</in>
            <in>SolveDio.h</in>
            <in>Zpolyhedron.h</in>
            <in>alpha.h</in>
            <in>arithmetic_errors.h</in>
            <in>arithmetique.h</in>
            <in>compress_parms.h</in>
            <in>ehrhart.h</in>
            <in>errormsg.h</in>
            <in>eval_ehrhart.h</in>
            <in>ext_ehrhart.h</in>
            <in>homogenization.h</in>
            <in>matrix.h</in>
            <in>matrix_addon.h</in>
            <in>matrix_permutations.h</in>
            <in>param.h</in>
            <in>polyhedron.h</in>
            <in>polylib.h</in>
            <in>polylib32.h</in>
            <in>polylib64.h</in>
            <in>polylibgmp.h</in>
            <in>polyparam.h</in>
            <in>ranking.h</in>
            <in>types.h</in>
            <in>vector.h</in>
          </df>
        </df>
        <df name="m4">
        </df>
        <df name="source">
          <df name="arith">
            <in>arithmetic_errors.h</in>
            <in>arithmetique.h</in>
            <in>assert.h</in>
            <in>errors.c</in>
          </df>
          <df name="ehrhart">
            <in>ehrhart.c</in>
            <in>eval_ehrhart.c</in>
            <in>ext_ehrhart.c</in>
            <in>homogenization.c</in>
            <in>ranking.c</in>
          </df>
          <df name="kernel">
            <in>Lattice.c</in>
            <in>Matop.c</in>
            <in>NormalForms.c</in>
            <in>SolveDio.c</in>
            <in>Zpolyhedron.c</in>
            <in>alpha.c</in>
            <in>compress_parms.c</in>
            <in>errormsg.c</in>
            <in>matrix.c</in>
            <in>matrix_addon.c</in>
            <in>matrix_permutations.c</in>
            <in>param.c</in>
            <in>polyhedron.c</in>
            <in>polyparam.c</in>
            <in>vector.c</in>
          </df>
          <in>count.c</in>
          <in>oldpolytest.c</in>
        </df>
        <df name="Test">
          <df name="cases">
          </df>
          <df name="ehrhart">
          </df>
          <df name="ehrhart_union">
          </df>
          <df name="general">
          </df>
          <df name="old">
          </df>
          <df name="others">
          </df>
          <df name="pp">
          </df>
          <df name="ranking">
          </df>
          <df name="Zpolytest">
          </df>
        </df>
        <in>config.h</in>
        <in>mp_get_memory_functions.c</in>
      </df>
      <df name="polymake">
        <in>convert.cc</in>
        <in>convert.h</in>
        <in>h_star_vector.cc</in>
        <in>lattice_points.cc</in>
      </df>
      <df name="tests">
        <df name="ehrhart">
        </df>
        <df name="ehrhart_e">
          <df name="piplib">
          </df>
          <df name="scarf">
          </df>
        </df>
        <df name="euler">
        </df>
        <df name="iscc">
        </df>
        <df name="lattice_width">
        </df>
        <df name="lexmin">
        </df>
        <df name="pwqp">
        </df>
        <df name="sample">
        </df>
      </df>
      <df name="zsolve">
        <in>banner.h</in>
        <in>cputime.c</in>
        <in>cputime.h</in>
        <in>defs.c</in>
        <in>defs.h</in>
        <in>indexarray.c</in>
        <in>indexarray.h</in>
        <in>lattice.c</in>
        <in>lattice.h</in>
        <in>libzsolve.c</in>
        <in>libzsolve.h</in>
        <in>linearsystem.c</in>
        <in>linearsystem.h</in>
        <in>matrix.c</in>
        <in>matrix.h</in>
        <in>opts.c</in>
        <in>opts.h</in>
        <in>solve.c</in>
        <in>valuetrees.c</in>
        <in>valuetrees.h</in>
        <in>varproperties.c</in>
        <in>varproperties.h</in>
        <in>vector.c</in>
        <in>vector.h</in>
        <in>vectorarray.c</in>
        <in>vectorarray.h</in>
      </df>
      <in>4coins.cc</in>
      <in>NTL_QQ.cc</in>
      <in>barvinok.cc</in>
      <in>barvinok_count.c</in>
      <in>barvinok_e.cc</in>
      <in>barvinok_ehrhart.cc</in>
      <in>barvinok_ehrhart_options.c</in>
      <in>barvinok_ehrhart_options.h</in>
      <in>barvinok_enumerate.cc</in>
      <in>barvinok_enumerate_e.cc</in>
      <in>barvinok_enumerate_e_options.c</in>
      <in>barvinok_enumerate_e_options.h</in>
      <in>barvinok_enumerate_options.c</in>
      <in>barvinok_enumerate_options.h</in>
      <in>barvinok_summate.c</in>
      <in>barvinok_union.cc</in>
      <in>barvinok_union_options.c</in>
      <in>barvinok_union_options.h</in>
      <in>basis_reduction.c</in>
      <in>basis_reduction_cdd.cc</in>
      <in>basis_reduction_glpk.c</in>
      <in>basis_reduction_templ.c</in>
      <in>bernoulli.c</in>
      <in>bernoulli.h</in>
      <in>bfcounter.cc</in>
      <in>bfcounter.h</in>
      <in>binomial.c</in>
      <in>binomial.h</in>
      <in>bound.c</in>
      <in>cone_hilbert_basis.c</in>
      <in>cone_integer_hull.c</in>
      <in>config.h</in>
      <in>conversion.cc</in>
      <in>conversion.h</in>
      <in>counter.cc</in>
      <in>counter.h</in>
      <in>decomposer.cc</in>
      <in>decomposer.h</in>
      <in>dpoly.cc</in>
      <in>dpoly.h</in>
      <in>edomain.cc</in>
      <in>edomain.h</in>
      <in>euler.cc</in>
      <in>euler.h</in>
      <in>evalue.c</in>
      <in>evalue_convert.cc</in>
      <in>evalue_convert.h</in>
      <in>evalue_convert_options.c</in>
      <in>evalue_isl.c</in>
      <in>evalue_read.c</in>
      <in>evalue_read.h</in>
      <in>evalue_util.cc</in>
      <in>evalue_util.h</in>
      <in>fdstream.cc</in>
      <in>fdstream.h</in>
      <in>genfun.cc</in>
      <in>genfun_constructor.cc</in>
      <in>genfun_constructor.h</in>
      <in>hilbert.c</in>
      <in>hilbert.h</in>
      <in>hull.c</in>
      <in>hull.h</in>
      <in>ilp.c</in>
      <in>ilp.h</in>
      <in>initcdd.cc</in>
      <in>initcdd.h</in>
      <in>iscc.c</in>
      <in>isl_obj_list.c</in>
      <in>isl_obj_list.h</in>
      <in>isl_obj_str.c</in>
      <in>isl_obj_str.h</in>
      <in>isl_param_util.c</in>
      <in>isl_param_util.h</in>
      <in>lattice_point.cc</in>
      <in>lattice_point.h</in>
      <in>lattice_width.c</in>
      <in>lattice_width.h</in>
      <in>laurent.cc</in>
      <in>laurent.h</in>
      <in>laurent_old.cc</in>
      <in>laurent_old.h</in>
      <in>lexmin.cc</in>
      <in>lexmin.h</in>
      <in>lexmin_options.c</in>
      <in>mat_util.cc</in>
      <in>mat_util.h</in>
      <in>matrix_read.cc</in>
      <in>matrix_read.h</in>
      <in>mpz_divisible_p.c</in>
      <in>normalization.c</in>
      <in>normalization.h</in>
      <in>options.c</in>
      <in>param_polynomial.cc</in>
      <in>param_polynomial.h</in>
      <in>param_util.c</in>
      <in>param_util.h</in>
      <in>polyhedron_integer_hull.c</in>
      <in>polyhedron_sample.c</in>
      <in>polysign.c</in>
      <in>polysign.h</in>
      <in>polysign_cdd.cc</in>
      <in>polysign_cdd_template.cc</in>
      <in>polysign_cddf.cc</in>
      <in>polysign_glpk.c</in>
      <in>polysign_isl.c</in>
      <in>polysign_polylib.c</in>
      <in>polytope_lattice_width.c</in>
      <in>polytope_scan.c</in>
      <in>polytope_volume.c</in>
      <in>power.h</in>
      <in>randomtest.c</in>
      <in>reduce_domain.c</in>
      <in>reduce_domain.h</in>
      <in>reducer.cc</in>
      <in>reducer.h</in>
      <in>remove_equalities.c</in>
      <in>remove_equalities.h</in>
      <in>remove_redundant_equalities.c</in>
      <in>sample.c</in>
      <in>scale.c</in>
      <in>scale.h</in>
      <in>scarf.cc</in>
      <in>section_array.h</in>
      <in>semigroup_holes.cc</in>
      <in>series.cc</in>
      <in>skewed_genfun.cc</in>
      <in>skewed_genfun.h</in>
      <in>summate.c</in>
      <in>summate.h</in>
      <in>test.c</in>
      <in>test_approx.c</in>
      <in>test_bound.c</in>
      <in>testlib.cc</in>
      <in>topcom.c</in>
      <in>topcom.h</in>
      <in>util.c</in>
      <in>vector_partition_chambers.c</in>
      <in>verif_ehrhart.c</in>
      <in>verif_ehrhart.h</in>
      <in>verify.c</in>
      <in>verify.h</in>
      <in>verify_lexsmaller.c</in>
      <in>verify_series.cc</in>
      <in>verify_series.h</in>
      <in>version.c</in>
      <in>version.h</in>
      <in>vertex_cone.cc</in>
      <in>vertex_cone.h</in>
      <in>volume.c</in>
      <in>volume.h</in>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}" "card [N,M] -> { [i,j,k] : 1 &lt;= i,j,k &lt;= N and i+j+k-2 = M };"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" </runcommandpicklistitem>
          <runcommandpicklistitem>echo 'card [N,M] -> { [i,j,k] : 1 &lt;= i,j,k &lt;= N and i+j+k-2 = M };' | "${OUTPUT_PATH}"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>true</buildfirst>
        <console-type>1</console-type>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
          <variable name="LD_LIBRARY_PATH" value="/usr/local/lib"/>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
